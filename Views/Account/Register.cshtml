@model Academia.Models.RegisterViewModel
@{
    ViewBag.Title = "Registrar";

    var AdminExiste = ViewData["AdminExiste"];
}


<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <input id="idAdmin"
           name="idAdmin"
           type="hidden"
           value= @AdminExiste />

    @Html.AntiForgeryToken()
    <h4>Criar uma nova conta.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Nome, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Nome, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TipoPessoa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.TipoPessoa, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipoPessoa, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.TipoPessoa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TipoPessoa, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoPessoa, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-primary" value="Registrar" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(() => {
        //debugger;
        //var aux;
        //aux = $('#idAdmin').val();

        //if (aux > 0)
        //{
        //    $("#TipoPessoa option[value='0']").remove();
        //}

            //carregaClientes();

            //$('#txtSearch').on('keyup', () => {
            //    carregaClientes();
            //});
        });

    @*function FetchP()
    {
        var url = '@Url.Action("FetchP", "Your_Controller")';
        var PDD= $("#PDD");
        var ODD= $("#ODD").val();

        $.getJSON(url, { O: ODD}, function (response) {
            PDD.empty();
            debugger;
            $.each(response, function (index, item) {
                debugger;
                var p = new Option(item.Text, item.Value);
                PDD.append(p);
            });
        });
    }*@

        @*function carregaClientes()
        {
            $.ajax({
                url: '@Url.Action("BuscaClientes","Clientes")',
                dataType: 'html',
                method: 'GET',
                data: { nome: $('#txtSearch').val() },
                success: function (res) {
                    $('#gridClientes').html('').html(res);
                },
                error: function (err) {
                    console.log(err);
                }

            }
            )
        }*@
</script>

